# =============================================================================
# DATABRICKS DIGITAL TWIN - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables used by both frontend and backend
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Backend API Configuration
BACKEND_URL=http://localhost:8080
PORT=8080
SECRET_KEY=your-secret-key-here

# Frontend (requires REACT_APP_ prefix)
REACT_APP_BACKEND_URL=http://localhost:8080

# =============================================================================
# DATABRICKS CONFIGURATION
# =============================================================================

# Databricks Workspace Connection
DATABRICKS_HOST=https://your-workspace.databricks.com
DATABRICKS_TOKEN=dapixxxxxx
DATABRICKS_HTTP_PATH=/sql/1.0/warehouses/your-warehouse-id
WAREHOUSE_ID=your-warehouse-id

# Frontend Databricks (requires REACT_APP_ prefix)
REACT_APP_DATABRICKS_HOST=https://your-workspace.databricks.com
REACT_APP_DATABRICKS_TOKEN=dapixxxxxx
REACT_APP_DATABRICKS_HTTP_PATH=/sql/1.0/warehouses/your-warehouse-id
REACT_APP_WAREHOUSE_ID=your-warehouse-id

# =============================================================================
# DATABASE SCHEMA CONFIGURATION
# =============================================================================

# Databricks Catalog/Schema/Table Structure
DATABRICKS_CATALOG=main
DATABRICKS_SCHEMA=your_schema
DATABRICKS_TABLE=bronze

# Frontend Database Config (requires REACT_APP_ prefix)
REACT_APP_DATABRICKS_CATALOG=main
REACT_APP_DATABRICKS_SCHEMA=your_schema
REACT_APP_DATABRICKS_TABLE=bronze

# =============================================================================
# ADVANCED TABLE CONFIGURATIONS
# =============================================================================

# Full table names for specific data sources
SYNCED_TABLE_FULL_NAME=main.your_schema.synced_table
TRIPLE_TABLE_FULL_NAME=main.your_schema.sensor_triples

# Frontend Advanced Tables (requires REACT_APP_ prefix)
REACT_APP_SYNCED_TABLE_FULL_NAME=main.your_schema.synced_table
REACT_APP_TRIPLE_TABLE_FULL_NAME=main.your_schema.sensor_triples

# =============================================================================
# POSTGRESQL CONFIGURATION (Backend Only)
# =============================================================================

# PostgreSQL Connection (for lakebase integration)
PGDATABASE=your_database
PGUSER=your_username
PGPASSWORD=your_password
PGHOST=localhost
PGPORT=5432
PGSSLMODE=require
PGAPPNAME=databricks-digital-twin

# PostgreSQL Token Refresh Settings
PG_TOKEN_REFRESH_SECONDS=900

# =============================================================================
# OPTIONAL DATABRICKS APP DEPLOYMENT
# =============================================================================

# For Databricks Apps deployment
DATABRICKS_APP_PORT=8080

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. COPY THIS FILE:
#    cp .env.example .env.local
#
# 2. DATABRICKS SETUP:
#    - Get workspace URL from your Databricks workspace
#    - Generate access token: User Settings → Developer → Access Tokens
#    - Find warehouse ID: SQL Warehouses → Connection Details
#    - Create/identify your catalog, schema, and bronze table
#
# 3. POSTGRESQL SETUP (Optional):
#    - Configure PostgreSQL connection for lakebase integration
#    - Used for real-time data synchronization
#
# 4. VERIFY SCHEMA:
#    Your bronze table should have these columns:
#    - component_id: STRING
#    - sensor_temperature: DOUBLE
#    - sensor_pressure: DOUBLE
#    - sensor_vibration: DOUBLE
#    - sensor_speed: DOUBLE
#    - timestamp: TIMESTAMP
#
# 5. START SERVICES:
#    Backend:  cd serving-app && python app.py
#    Frontend: cd frontend && npm start
#
# =============================================================================